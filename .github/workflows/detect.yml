
name: Detect Mods

on:
  push:
    branches: ["main"]
  schedule:
    - cron:  '*/5 * * * *'

  workflow_dispatch:


jobs:
  
  detect:
    environment:
      name: detector
    strategy:
      matrix:
        node-version: [20.x]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout This Repository
        uses: actions/checkout@v3
        with:
          path: code
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run ci command from npm
        run: |
          cd ./code/
          npm ci

      - name: Run Detector
        id: run_de
        run: |
          cd ./code/
          npm run deploy
      - name: Update Index
        if: steps.run_de.outputs.update_index == 'true'
        run: |
          git clone https://github.com/coopeeo/geodemodindex.git

          cd geodemodindex
          git config pull.rebase false
          # git remote set-url origin "https://${{ secrets.GEODE_BOT_PUSH_BIN_TOKEN }}@github.com/coopeeo/geodemodindex.git"
          git remote add upstream "https://github.com/geode-sdk/mods.git"
          git pull origin mods
          git fetch upstream
          git checkout mods
          git config --local user.email "${{ secrets.GEODE_BOT_EMAIL }}"
          git config --local user.name "Coop's Bot"
          git rebase upstream/main
          git commit -m "Update all of it "
          git push -u origin mods || true
      - name: Run Python
        if: steps.run_de.outputs.update_index == 'true'
        id: runit
        shell: bash
        run: |
          python3 code/sendupdate.py
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          ROLE_ID: ${{ secrets.ROLE_ID }}
          THE_OBJECT: ${{ steps.run_de.outputs.list_index }}

      # dont use unless installing packages
      #- name: Show Package Lock and Package 
      #  run: |
      #    cd ./code/
      #    node spitoutthepackagelock.js

